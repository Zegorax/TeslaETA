<!DOCTYPE html>
<html>

<head>
    <meta charset="utf-8">
    <title>Set a point after Geocoder result</title>
    <meta name="viewport" content="initial-scale=1,maximum-scale=1,user-scalable=no">
    <link href="https://api.mapbox.com/mapbox-gl-js/v2.11.0/mapbox-gl.css" rel="stylesheet">
    <script src="https://api.mapbox.com/mapbox-gl-js/v2.11.0/mapbox-gl.js"></script>
    <style>
        body {
            margin: 0;
            padding: 0;
        }

        #map {
            position: absolute;
            top: 0;
            bottom: 0;
            width: 100%;
        }
    </style>
</head>

<body>
    <script
        src="https://api.mapbox.com/mapbox-gl-js/plugins/mapbox-gl-geocoder/v5.0.0/mapbox-gl-geocoder.min.js"></script>
    <link rel="stylesheet"
        href="https://api.mapbox.com/mapbox-gl-js/plugins/mapbox-gl-geocoder/v5.0.0/mapbox-gl-geocoder.css"
        type="text/css">

    <style>
        #geocoder-container>div {
            min-width: 50%;
            margin-left: 25%;
        }
    </style>
    <div id="map"></div>

    <script>
        var marker_lat = 0
        var marker_lng = 0

        mapboxgl.accessToken = '{{ mbtoken }}';
        const map = new mapboxgl.Map({
            container: 'map',
            // Choose from Mapbox's core styles, or make your own style with Mapbox Studio
            style: 'mapbox://styles/mapbox/navigation-guidance-day-v4',
            center: [{{ car_location[0] }}, {{ car_location[1] }}],
        zoom: 13
        });

        const geocoder = new MapboxGeocoder({
            accessToken: mapboxgl.accessToken,
            marker: {
                color: 'orange',
                draggable: true
            },
            mapboxgl: mapboxgl,
            proximity: {
                longitude: {{ car_location[0] }},
                latitude: {{ car_location[1] }}
                }
        });

        map.addControl(geocoder);

        function updateVars() {
            marker_lat = geocoder.mapMarker.getLngLat().lat
            marker_lng = geocoder.mapMarker.getLngLat().lng

            console.log("UPDATED VARS", marker_lat, marker_lng)
        };

        function dragUpdater() {
            geocoder.mapMarker.on('dragend', updateVars)
        };

        geocoder.addControl

        geocoder.on('result', updateVars);
        geocoder.on('result', dragUpdater);

    </script>

</body>

</html>